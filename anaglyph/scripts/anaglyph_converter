#!/usr/bin/env python

import roslib
roslib.load_manifest('anaglyph')
import sys
import rospy
import cv
from std_msgs.msg import String
from sensor_msgs.msg import Image
from cv_bridge import CvBridge, CvBridgeError
import argparse

class image_converter:

    def __init__(self, publish_topic, left_image_topic, right_image_topic, width_crop, height_crop):
        self.image_pub = rospy.Publisher(publish_topic,Image)

        #cv.NamedWindow("Image window", 1)
        self.bridge = CvBridge()
        self.left_sub = rospy.Subscriber(left_image_topic, Image, self.left_callback)
	self.right_sub = rospy.Subscriber(right_image_topic, Image, self.right_callback)
	self.left = False
	self.right = False
	self.out = False
	self.width_crop = width_crop
	self.height_crop = height_crop

    def left_callback(self,data):
        try:
            self.left = self.bridge.imgmsg_to_cv(data, "bgr8")
	    self.process()
        except CvBridgeError, e:
            print e
	
    def right_callback(self, data):
	try:
	    self.right = self.bridge.imgmsg_to_cv(data, "bgr8")
	    self.process()
	except CvBridgeError, e:
	    print e

    def process(self):
	if self.left!=False and self.right!=False:
	    channels = []
	    w = int((self.width_crop)/2)
	    h = int((self.height_crop)/2)
	    self.left = self.left[0:self.left.height-h, w:self.left.width]
	    self.right = self.right[h:self.right.height, 0:self.right.width-w]
	    for i in range(3):
		channels.append(cv.CreateImage(cv.GetSize(self.left),8,1))
	    for i in range(3):
		channels.append(cv.CreateImage(cv.GetSize(self.right),8,1))
	    cv.Split(self.left, channels[0], channels[1], channels[2], None)
  	    cv.Split(self.right, channels[3], channels[4], channels[5], None)
	    merge = cv.CreateImage(cv.GetSize(self.left), 8, 3)
   	    cv.Merge(channels[3],channels[4],channels[2], None, merge)
            #cv.ShowImage("Image window", merge)
            #cv.WaitKey(3)
            try:
                self.image_pub.publish(self.bridge.cv_to_imgmsg(merge, "bgr8"))
            except CvBridgeError, e:
                print e
	    self.left = False
	    self.right = False

def main(args):
    publish_topic = "anaglyph_images"
    left_image_topic = 'left_image_topic'
    parser = argparse.ArgumentParser()
    parser.add_argument('--horizontal',type=int,default=250)
    parser.add_argument('--vertical',type=int,default=200)
    args = parser.parse_args(rospy.myargv()[1:])
    width_crop = args.horizontal
    height_crop = args.vertical
    right_image_topic = 'right_image_topic' 
    ic = image_converter(publish_topic, left_image_topic, right_image_topic, width_crop, height_crop)
    rospy.init_node('image_converter', anonymous=True)
    try:
        rospy.spin()
    except KeyboardInterrupt:
        print "Shutting down"
    cv.DestroyAllWindows()

if __name__ == '__main__':
    main(sys.argv)
